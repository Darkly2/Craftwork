Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id(\"com.android.application\")\r\n    id(\"org.jetbrains.kotlin.android\")\r\n    id(\"com.google.gms.google-services\")\r\n    id (\"com.google.devtools.ksp\") version (\"1.6.21-1.0.5\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.craftwork\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.craftwork\"\r\n        minSdk = 24\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = \"1.8\"\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n\r\n    val lifecycle_version = \"2.7.0\"\r\n\r\n    // ViewModel\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version\")\r\n    // LiveData\r\n    implementation(\"androidx.lifecycle:lifecycle-livedata:$lifecycle_version\")\r\n    // Lifecycles only (without ViewModel or LiveData)\r\n    implementation(\"androidx.lifecycle:lifecycle-runtime:$lifecycle_version\")\r\n\r\n    // Saved state module for ViewModel\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version\")\r\n\r\n    // Annotation processor\r\n    ksp(\"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\")\r\n\r\n\r\n\r\n    implementation(platform(\"com.google.firebase:firebase-bom:32.7.1\"))\r\n\r\n    implementation(\"com.firebaseui:firebase-ui-auth:7.2.0\")\r\n\r\n    implementation (\"com.github.bumptech.glide:glide:4.16.0\")\r\n\r\n    implementation (\"io.reactivex.rxjava3:rxandroid:3.0.2\")\r\n    implementation (\"io.reactivex.rxjava3:rxjava:3.1.5\")\r\n\r\n    implementation(\"androidx.core:core-ktx:1.12.0\")\r\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\r\n    implementation(\"com.google.android.material:material:1.11.0\")\r\n    implementation(\"androidx.constraintlayout:constraintlayout:2.1.4\")\r\n    testImplementation(\"junit:junit:4.13.2\")\r\n    androidTestImplementation(\"androidx.test.ext:junit:1.1.5\")\r\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.5.1\")\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	
+++ b/app/build.gradle.kts	
@@ -1,8 +1,6 @@
 plugins {
     id("com.android.application")
     id("org.jetbrains.kotlin.android")
-    id("com.google.gms.google-services")
-    id ("com.google.devtools.ksp") version ("1.6.21-1.0.5")
 }
 
 android {
@@ -19,6 +17,10 @@
         testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
     }
 
+    buildFeatures {
+        viewBinding = true
+    }
+
     buildTypes {
         release {
             isMinifyEnabled = false
@@ -39,33 +41,6 @@
 
 dependencies {
 
-
-    val lifecycle_version = "2.7.0"
-
-    // ViewModel
-    implementation("androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version")
-    // LiveData
-    implementation("androidx.lifecycle:lifecycle-livedata:$lifecycle_version")
-    // Lifecycles only (without ViewModel or LiveData)
-    implementation("androidx.lifecycle:lifecycle-runtime:$lifecycle_version")
-
-    // Saved state module for ViewModel
-    implementation("androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version")
-
-    // Annotation processor
-    ksp("androidx.lifecycle:lifecycle-compiler:$lifecycle_version")
-
-
-
-    implementation(platform("com.google.firebase:firebase-bom:32.7.1"))
-
-    implementation("com.firebaseui:firebase-ui-auth:7.2.0")
-
-    implementation ("com.github.bumptech.glide:glide:4.16.0")
-
-    implementation ("io.reactivex.rxjava3:rxandroid:3.0.2")
-    implementation ("io.reactivex.rxjava3:rxjava:3.1.5")
-
     implementation("androidx.core:core-ktx:1.12.0")
     implementation("androidx.appcompat:appcompat:1.6.1")
     implementation("com.google.android.material:material:1.11.0")
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Craftwork\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -13,7 +13,7 @@
         android:theme="@style/Theme.Craftwork"
         tools:targetApi="31">
         <activity
-            android:name=".MainActivity"
+            android:name=".presentation.MainActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
Index: app/src/main/java/com/example/craftwork/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/MainActivity.kt b/app/src/main/java/com/example/craftwork/MainActivity.kt
--- a/app/src/main/java/com/example/craftwork/MainActivity.kt	
+++ b/app/src/main/java/com/example/craftwork/MainActivity.kt	
@@ -1,11 +1,0 @@
-package com.example.craftwork
-
-import androidx.appcompat.app.AppCompatActivity
-import android.os.Bundle
-
-class MainActivity : AppCompatActivity() {
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-        setContentView(R.layout.activity_main)
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/user/AddUserInFriendListUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.user\r\n\r\nclass AddUserInFriendListUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/user/AddUserInFriendListUseCase.kt b/app/src/main/java/com/example/craftwork/domain/user/AddUserInFriendListUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/user/AddUserInFriendListUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/user/AddUserInFriendListUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.user
 
-class AddUserInFriendListUseCase {
+class AddUserInFriendListUseCase(private val userListRepository: UserListRepository) {
+    fun addUserInFriendList(user: User) {
+        userListRepository.addUserInFriendList(user)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/user/DeleteUserUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.user\r\n\r\nclass DeleteUserUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/user/DeleteUserUseCase.kt b/app/src/main/java/com/example/craftwork/domain/user/DeleteUserUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/user/DeleteUserUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/user/DeleteUserUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.user
 
-class DeleteUserUseCase {
+class DeleteUserUseCase(private val userRepository: UserRepository) {
+    fun deleteUser(user: User) {
+        userRepository.deleteUser(user)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/user/SignUpUserUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.user\r\n\r\nclass SignUpUserUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/user/SignUpUserUseCase.kt b/app/src/main/java/com/example/craftwork/domain/user/SignUpUserUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/user/SignUpUserUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/user/SignUpUserUseCase.kt	
@@ -1,4 +1,13 @@
 package com.example.craftwork.domain.user
 
-class SignUpUserUseCase {
+class SignUpUserUseCase(private val userRepository: UserRepository){
+    fun signUpUser(
+        email: String,
+        name: String,
+        lastName: String,
+        age: Int,
+        password: String
+    ): User {
+        return userRepository.signUpUser(email, name, lastName, age, password)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/user/SignInUserUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.user\r\n\r\nclass SignInUserUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/user/SignInUserUseCase.kt b/app/src/main/java/com/example/craftwork/domain/user/SignInUserUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/user/SignInUserUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/user/SignInUserUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.user
 
-class SignInUserUseCase {
+class SignInUserUseCase(private val userRepository: UserRepository) {
+    fun signInUser(eMail: String, password: String) {
+        userRepository.signInUser(eMail, password)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/user/SignOutUserUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.user\r\n\r\nclass SignOutUserUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/user/SignOutUserUseCase.kt b/app/src/main/java/com/example/craftwork/domain/user/SignOutUserUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/user/SignOutUserUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/user/SignOutUserUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.user
 
-class SignOutUserUseCase {
+class SignOutUserUseCase(private val userRepository: UserRepository) {
+    fun signOutUser(userId: String) {
+        userRepository.signOutUser(userId)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/user/GetFriendListUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.user\r\n\r\nclass GetFriendListUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/user/GetFriendListUseCase.kt b/app/src/main/java/com/example/craftwork/domain/user/GetFriendListUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/user/GetFriendListUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/user/GetFriendListUseCase.kt	
@@ -1,4 +1,9 @@
 package com.example.craftwork.domain.user
 
-class GetFriendListUseCase {
+import androidx.lifecycle.LiveData
+
+class GetFriendListUseCase(private val userListRepository: UserListRepository) {
+    fun getFriendList(userId: String): LiveData<List<User>> {
+        return userListRepository.getFriendList(userId)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/user/RemoveUserFromFriendListUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.user\r\n\r\nclass RemoveUserFromFriendListUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/user/RemoveUserFromFriendListUseCase.kt b/app/src/main/java/com/example/craftwork/domain/user/RemoveUserFromFriendListUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/user/RemoveUserFromFriendListUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/user/RemoveUserFromFriendListUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.user
 
-class RemoveUserFromFriendListUseCase {
+class RemoveUserFromFriendListUseCase(private val userListRepository: UserListRepository) {
+    fun removeUserFromFriendList(user: User) {
+        userListRepository.removeUserFromFriendList(user)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/craftItem/GetItemListUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.craftItem\r\n\r\nclass GetItemListUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/craftItem/GetItemListUseCase.kt b/app/src/main/java/com/example/craftwork/domain/craftItem/GetItemListUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/craftItem/GetItemListUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/craftItem/GetItemListUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.craftItem
 
-class GetItemListUseCase {
+class GetItemListUseCase(private val craftItemListRepository: CraftItemListRepository) {
+    fun getItem(): List<CraftItem> {
+        return craftItemListRepository.getItemList()
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/craftItem/ItemListRepository.kt
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/craftItem/ItemListRepository.kt b/app/src/main/java/com/example/craftwork/domain/craftItem/CraftItemListRepository.kt
rename from app/src/main/java/com/example/craftwork/domain/craftItem/ItemListRepository.kt
rename to app/src/main/java/com/example/craftwork/domain/craftItem/CraftItemListRepository.kt
--- a/app/src/main/java/com/example/craftwork/domain/craftItem/ItemListRepository.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/craftItem/CraftItemListRepository.kt	
@@ -1,4 +1,9 @@
 package com.example.craftwork.domain.craftItem
 
-interface ItemListRepository {
+interface CraftItemListRepository {
+    fun addNewItem(craftItem: CraftItem)
+    fun deleteItem(craftItem: CraftItem)
+    fun editItem(craftItem: CraftItem)
+    fun getItem(Id: String): CraftItem
+    fun getItemList(): List<CraftItem>
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/craftItem/DeleteItemUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.craftItem\r\n\r\nclass DeleteItemUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/craftItem/DeleteItemUseCase.kt b/app/src/main/java/com/example/craftwork/domain/craftItem/DeleteItemUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/craftItem/DeleteItemUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/craftItem/DeleteItemUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.craftItem
 
-class DeleteItemUseCase {
+class DeleteItemUseCase(private val craftItemListRepository: CraftItemListRepository) {
+    fun deleteItem(craftItem: CraftItem) {
+        craftItemListRepository.deleteItem(craftItem)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/craftItem/EditItemUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.craftItem\r\n\r\nclass EditItemUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/craftItem/EditItemUseCase.kt b/app/src/main/java/com/example/craftwork/domain/craftItem/EditItemUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/craftItem/EditItemUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/craftItem/EditItemUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.craftItem
 
-class EditItemUseCase {
+class EditItemUseCase(private val craftItemListRepository: CraftItemListRepository) {
+    fun editItem(craftItem: CraftItem) {
+        craftItemListRepository.editItem(craftItem)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/message/SendMessageUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.message\r\n\r\nclass SendMessageUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/message/SendMessageUseCase.kt b/app/src/main/java/com/example/craftwork/domain/message/SendMessageUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/message/SendMessageUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/message/SendMessageUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.message
 
-class SendMessageUseCase {
+class SendMessageUseCase(private val messageListRepository: MessageListRepository) {
+    fun sendMessage(message: Message) {
+        messageListRepository.sendMessage(message)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/message/GetMessageListUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.message\r\n\r\nclass GetMessageListUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/message/GetMessageListUseCase.kt b/app/src/main/java/com/example/craftwork/domain/message/GetMessageListUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/message/GetMessageListUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/message/GetMessageListUseCase.kt	
@@ -1,4 +1,10 @@
 package com.example.craftwork.domain.message
 
-class GetMessageListUseCase {
+import androidx.lifecycle.LiveData
+import com.example.craftwork.domain.user.User
+
+class GetMessageListUseCase(private val messageListRepository: MessageListRepository) {
+    fun getMessageList(user: User): LiveData<List<Message>> {
+        return messageListRepository.getMessageList(user)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/Image/UploadImageUseCase.kt
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/Image/UploadImageUseCase.kt b/app/src/main/java/com/example/craftwork/domain/Image/AddNewImageUseCase.kt
rename from app/src/main/java/com/example/craftwork/domain/Image/UploadImageUseCase.kt
rename to app/src/main/java/com/example/craftwork/domain/Image/AddNewImageUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/Image/UploadImageUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/Image/AddNewImageUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.Image
 
-class UploadImageUseCase {
+class AddNewImageUseCase(private val imageListRepository: ImageListRepository) {
+    fun addNewImage(image: Image) {
+        imageListRepository.addNewImage(image)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/message/DeleteMessageUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.message\r\n\r\nclass DeleteMessageUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/message/DeleteMessageUseCase.kt b/app/src/main/java/com/example/craftwork/domain/message/DeleteMessageUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/message/DeleteMessageUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/message/DeleteMessageUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.message
 
-class DeleteMessageUseCase {
+class DeleteMessageUseCase(private val messageListRepository: MessageListRepository) {
+    fun deleteMessage(message: Message) {
+        messageListRepository.deleteMessage(message)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/craftItem/AddNewItemUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.craftItem\r\n\r\nclass AddNewItemUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/craftItem/AddNewItemUseCase.kt b/app/src/main/java/com/example/craftwork/domain/craftItem/AddNewItemUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/craftItem/AddNewItemUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/craftItem/AddNewItemUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.craftItem
 
-class AddNewItemUseCase {
+class AddNewItemUseCase(private val craftItemListRepository: CraftItemListRepository) {
+    fun addNewItem(craftItem: CraftItem) {
+        craftItemListRepository.addNewItem(craftItem)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/Image/ImageListRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.Image\r\n\r\ninterface ImageListRepository {\r\n    fun deleteImage(image: Image)\r\n    fun editImage(image: Image)\r\n    fun uploadImage(image: Image)\r\n    fun getImage(id: String): Image\r\n    fun getImageList(): List<Image>\r\n\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/Image/ImageListRepository.kt b/app/src/main/java/com/example/craftwork/domain/Image/ImageListRepository.kt
--- a/app/src/main/java/com/example/craftwork/domain/Image/ImageListRepository.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/Image/ImageListRepository.kt	
@@ -3,7 +3,7 @@
 interface ImageListRepository {
     fun deleteImage(image: Image)
     fun editImage(image: Image)
-    fun uploadImage(image: Image)
+    fun addNewImage(image: Image)
     fun getImage(id: String): Image
     fun getImageList(): List<Image>
 
Index: app/src/main/java/com/example/craftwork/domain/Image/GetImageUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.Image\r\n\r\nclass GetImageUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/Image/GetImageUseCase.kt b/app/src/main/java/com/example/craftwork/domain/Image/GetImageUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/Image/GetImageUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/Image/GetImageUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.Image
 
-class GetImageUseCase {
+class GetImageUseCase(private val imageListRepository: ImageListRepository) {
+    fun getImage(id: String): Image {
+        return imageListRepository.getImage(id)
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/Image/GetImageListUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.Image\r\n\r\nclass GetImageListUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/Image/GetImageListUseCase.kt b/app/src/main/java/com/example/craftwork/domain/Image/GetImageListUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/Image/GetImageListUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/Image/GetImageListUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.Image
 
-class GetImageListUseCase {
+class GetImageListUseCase(private val imageListRepository: ImageListRepository) {
+    fun getImageList(): List<Image> {
+        return imageListRepository.getImageList()
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/craftwork/domain/Image/DeleteImageUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.Image\r\n\r\nclass DeleteImageUseCase(private val imageListRepository: ImageListRepository) {\r\n\r\n    fun deleteImage(image: Image) {\r\n        imageListRepository.deleteImage(image)\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/Image/DeleteImageUseCase.kt b/app/src/main/java/com/example/craftwork/domain/Image/DeleteImageUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/Image/DeleteImageUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/Image/DeleteImageUseCase.kt	
@@ -1,7 +1,6 @@
 package com.example.craftwork.domain.Image
 
 class DeleteImageUseCase(private val imageListRepository: ImageListRepository) {
-
     fun deleteImage(image: Image) {
         imageListRepository.deleteImage(image)
     }
Index: app/src/main/java/com/example/craftwork/domain/Image/EditImageUseCase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.craftwork.domain.Image\r\n\r\nclass EditImageUseCase {\r\n}
===================================================================
diff --git a/app/src/main/java/com/example/craftwork/domain/Image/EditImageUseCase.kt b/app/src/main/java/com/example/craftwork/domain/Image/EditImageUseCase.kt
--- a/app/src/main/java/com/example/craftwork/domain/Image/EditImageUseCase.kt	
+++ b/app/src/main/java/com/example/craftwork/domain/Image/EditImageUseCase.kt	
@@ -1,4 +1,7 @@
 package com.example.craftwork.domain.Image
 
-class EditImageUseCase {
+class EditImageUseCase(private val imageListRepository: ImageListRepository) {
+    fun editImage(image: Image) {
+        imageListRepository.editImage(image)
+    }
 }
\ No newline at end of file
